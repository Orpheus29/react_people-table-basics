{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","types/PersonSex.ts","components/PersonLink/PersonLink.tsx","utils/api.ts","utils/constants.ts","utils/getPreparedPeople.ts","components/PersonItem/PersonItem.tsx","types/TabColumnTitles.ts","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getClass","isActive","classNames","Navbar","className","role","to","App","HomePage","Loader","PersonSex","PersonLink","person","name","sex","slug","Female","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ERRORS","getPreparedPeople","people","map","mother","find","motherName","father","fatherName","PersonItem","selectedSlug","born","died","TabColumnTitles","PeopleTable","personSlug","useParams","Object","keys","key","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","noPeopleOnServer","setNoPeopleOnServer","useEffect","fetchPeople","currentPeople","length","canShowTable","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2d8bcb7a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getClass}>\n            Home\n          </NavLink>\n          <NavLink to=\"/people\" className={getClass}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export enum PersonSex {\n  Male = 'm',\n  Female = 'f',\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person, PersonSex } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={classNames({\n        'has-text-danger': sex === PersonSex.Female,\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { Person } from '../types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const ERRORS = {\n  DOWNLOAD_ERROR: 'Something went wrong',\n  NO_PEOPLE_ERROR: 'There are no people on the server',\n};\n\nexport const NO_PARENT_MARK = '-';\n","import { Person } from '../types/Person';\n\nexport const getPreparedPeople = (people: Person[]) => (\n  people.map(person => {\n    return {\n      ...person,\n      mother: people.find(({ name }) => name === person.motherName),\n      father: people.find(({ name }) => name === person.fatherName),\n    };\n  })\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { NO_PARENT_MARK } from '../../utils';\n\ntype Props = {\n  person: Person;\n  selectedSlug: string;\n};\n\nexport const PersonItem: React.FC<Props> = ({ person, selectedSlug }) => {\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    father,\n    mother,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === selectedSlug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName || NO_PARENT_MARK}\n      </td>\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName || NO_PARENT_MARK}\n      </td>\n    </tr>\n  );\n};\n","export enum TabColumnTitles {\n  Name = 'Name',\n  Sex = 'Sex',\n  Born = 'Born',\n  Died = 'Died',\n  Mother = 'Mother',\n  Father = 'Father',\n}\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonItem } from '../PersonItem';\nimport { TabColumnTitles } from '../../types/TabColumnTitles';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n  const personSlug = slug || '';\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.keys(TabColumnTitles).map(key => (\n            <th key={key}>\n              {key}\n            </th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            key={person.slug}\n            selectedSlug={personSlug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { getPeople, ERRORS, getPreparedPeople } from '../utils';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [noPeopleOnServer, setNoPeopleOnServer] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchPeople = async () => {\n      try {\n        const currentPeople = await getPeople();\n\n        if (!currentPeople.length) {\n          setErrorMessage(ERRORS.NO_PEOPLE_ERROR);\n          setNoPeopleOnServer(true);\n        } else {\n          setNoPeopleOnServer(false);\n        }\n\n        setPeople(getPreparedPeople(currentPeople));\n      } catch (error) {\n        setErrorMessage(ERRORS.DOWNLOAD_ERROR);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPeople();\n  }, []);\n\n  const canShowTable = !errorMessage && !!people.length;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage && (\n            <p\n              data-cy={!noPeopleOnServer\n                ? 'peopleLoadingError'\n                : 'noPeopleMessage'}\n              className={classNames({\n                'has-text-danger': !noPeopleOnServer,\n              })}\n            >\n              {errorMessage}\n            </p>\n          )}\n\n          {canShowTable && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage, PeoplePage, NotFoundPage } from './pages';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}